# Inspired by https://docs.docker.com/compose/django/
version: '3'

services:
  db:
    # NOTE: No persistance storage configured.
    # See: https://hub.docker.com/_/postgres/
    image: postgres
    # NOTE: this works for bitnami, not sure if this works for regular
    # postgres image
    volumes:
      - ./docker-init-db.sql:/docker-entrypoint-initdb.d/init_db.sql

  web:
    build: .
    environment: &web_env
      - DJANGO_SETTINGS_MODULE=bptl.conf.docker
      - SECRET_KEY=${SECRET_KEY:-8n47ma!3%cfdm3cgt)@1ozjo7+^!j+z18@+0f-2+!p6ba^kof_}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_LOGLEVEL=DEBUG
    ports:
      - 8000:8000
    depends_on:
      - db

# See: src/bptl/conf/docker.py
# Optional containers below:
#  elasticsearch:
#    # NOTE: No persistance storage configured.
#    # See: https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - cluster.routing.allocation.disk.threshold_enabled=false
#    ports:
#      - 9200:9200

  redis:
    # NOTE: No persistance storage configured.
    image: redis

  celery:
    build: .
    environment: *web_env
    command: /celery_worker.sh
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    environment: *web_env
    command: /celery_beat.sh
    depends_on:
      - db
      - redis

  celery-flower:
    image: mher/flower
    environment: *web_env
    command: /celery_flower.sh
    ports:
      - 5555:5555
    volumes:
      - ./bin/celery_flower.sh:/celery_flower.sh
    depends_on:
      - redis
      - celery
